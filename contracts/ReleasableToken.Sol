

import "./StandardToken.sol";
import "./Ownable.sol"

pragma solidity ^0.4.8;

Contract ReleasableToken is StandardToken, Ownable {

	bool public released = false; 
    mapping (address => bool) public tranferAgents;

    modifier canTransfer (address sender) {

    	if(!released){
    		if(!tranferAgents[sender]){
    			throw;
    		}
    	}
    }

    function setReleaseAgent(address _address, bool _state) onlyOwner {

    	tranferagents[_address] = _state; 

    }



    function transfer(address _to, uint256 _value) canTransfer(msg.sender) returns (bool success) {

    	return super.transfer(_to, _value);
        
   
    }

    function transferFrom(address _from, address _to, uint256 _value) canTransfer(_from) returns (bool success) {

    	return super.transferFrom(_from, _to, _value);
     
    }

    function releaseTokenTranfer() onlyOwner public {

    	released = true; 
    }


} //contract ends